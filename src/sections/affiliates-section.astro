---
import BreadCrumb from "#components/BreadCrumb.astro";
import Button from "#components/Button.astro";
import SearchBar from "#components/SearchBar.astro";
import CollegeCard from "#components/CollegeCard.astro";
import { getColleges, getUniversities } from "#lib/helper.ts";

const colleges = await getColleges();
const universities = await getUniversities();

const { university } = Astro.props;
let params = university;

const selectedUniversity: any = universities.find(
  (university) => params === university.id,
);

const universityName = selectedUniversity.name;

const filteredColleges = colleges.filter(
  (college) => college.affiliated_to === params,
);
---

<div
  class="px-5 md:px-10 lg:px-15 py-5 flex flex-col lg:flex-row gap-5 lg:gap-40 justify-between w-full"
>
  <div class="flex flex-col gap-5 lg:w-[35%]">
    <BreadCrumb />
    <h1 class="font-[600] text-indigo-950 text-lg lg:text-3xl mt-2">
      Colleges affiliated with
      <span class="underline">
        {universityName}
      </span>
    </h1>

    <div class="flex gap-3 w-full sm:w-fit lg:w-full flex-col sm:flex-row">
      <SearchBar entity="colleges" />
      <Button
        id="search-button"
        variant="primary"
        type="button"
        text="Search"
        className="px-8 text-sm "
      />
    </div>
  </div>

  <div
    class="grid grid-cols-1 lg:grid-cols-2 gap-6 mt-4 lg:mt-0 w-1/2 lg:w-2/3 flex-1/2"
    id="college-container"
  >
    {
      filteredColleges.map((college) => (
        <CollegeCard
          id={college.id}
          name={college.name}
          affiliatedTo={college.affiliated_to}
        />
      ))
    }
  </div>
</div>

<script>
  import { initCollegeSearch } from "#lib/searchCollege.ts";
  initCollegeSearch();
</script>
