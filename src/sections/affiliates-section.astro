---
import BreadCrumb from "#components/BreadCrumb.astro";
import Button from "#components/Button.astro";
import SearchBar from "#components/SearchBar.astro";
import CollegeCard from "#components/CollegeCard.astro";
import { collections } from "#content.config.ts";
import { getCollection } from "astro:content";
const { pathname } = Astro.url;

const colleges = await getCollection("colleges");

const { university } = Astro.props;
let params = university;
console.log(params);

const universityNames: any = {
  tu: "Tribhuvan University",
  ku: "Kathmandu University",
  pu: "Pokhara University",
  pou: "purbanchal uni",
};
const filteredColleges = colleges.filter(
  (college) => college.data.affiliated_to === params,
);
---

<div
  class="px-5 md:px-10 lg:px-15 py-5 flex flex-col lg:flex-row gap-5 lg:gap-10"
>
  <div class="flex flex-col gap-5 lg:w-1/3">
    <BreadCrumb />
    <h1 class="font-bold text-lg lg:text-3xl mt-2">
      Colleges affiliated with
      <span class="underline">
        {universityNames[params]}
      </span>
    </h1>

    <div class="flex gap-5 flex-col md:flex-row">
      <SearchBar entity="colleges" />
      <Button variant="primary" type="button" text="Search" />
    </div>
  </div>

  <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mt-4 lg:mt-0 lg:w-2/3">
    {
      filteredColleges.map((college) => (
        <CollegeCard
          id={college.id}
          name={college.data.name}
          affiliatedTo={college.data.affiliated_to}
        />
      ))
    }
  </div>
</div>
