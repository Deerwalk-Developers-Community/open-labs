---
import BreadCrumb from "#components/BreadCrumb.astro";
import Button from "#components/Button.astro";
import SearchBar from "#components/SearchBar.astro";
import { getCollection } from "astro:content";
import CourseCard from "#components/CourseCard.astro";

const courses = await getCollection("courses");
const colleges = await getCollection("colleges");

const { college } = Astro.props;

let selectedCollege = colleges.find((coll) => coll.id === college);

let selectedCourses = courses.filter((course) =>
  course.data.taught_at.includes(college),
);
---

<div
  class="px-5 md:px-10 lg:px-15 py-5 flex flex-col lg:flex-row gap-5 lg:gap-10"
>
  <div class="flex flex-col gap-5 lg:w-1/3">
    <BreadCrumb />
    <h1 class="font-bold text-lg lg:text-3xl mt-2">
      Courses Available in
      <span class="underline">
        {selectedCollege?.data.name}
      </span>
    </h1>

    <div class="flex gap-2 flex-col md:flex-row">
      <SearchBar entity="course" />
      <Button variant="primary" type="button" text="Search" />
    </div>
  </div>

  <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mt-4 lg:mt-0 lg:w-2/3">
    {
      selectedCourses!.map((course: any) => (
        <CourseCard college={college} id={course.id} name={course.data.name} />
      ))
    }
  </div>
</div>
