---
import BreadCrumbArrow from "./BreadCrumbArrow.astro";

const { pathname } = Astro.url;
const levels = [
  {
    title: "University",
    href: "/open-labs/universities",
    pattern: "/open-labs/universities$",
  },
  { title: "College", href: "#", pattern: "/open-labs/universities/[^/]+$" },
  { title: "Courses", href: "#", pattern: "/open-labs/courses/[^/]+$" },
  { title: "Subjects", href: "#", pattern: "/open-labs/subjects/[^/]+$" },
];

console.log(pathname);
const activeIndex = levels.findIndex((level) => {
  const regex = new RegExp(level.pattern);
  return regex.test(pathname);
});

const dynamicBreadcrumbs = levels.map((level, index) => {
  if (index === 0) {
    return level;
  }

  let href = "#";

  if (index === 1 && pathname.includes("/open-labs/universities/")) {
    href = pathname;
  } else if (index === 2 && pathname.includes("/open-labs/courses/")) {
    href = pathname;
  } else if (index === 3 && pathname.includes("/open-labs/subjects/")) {
    href = pathname;
  }

  return { ...level, href };
});

const visibleBreadcrumbs =
  activeIndex !== -1 ? dynamicBreadcrumbs.slice(0, activeIndex + 1) : [];
---

<nav class="flex">
  <ol
    class="inline-flex items-center space-x-1 md:space-x-2 rtl:space-x-reverse"
  >
    {
      visibleBreadcrumbs.map((crumb, i) => (
        <li class="inline-flex items-center gap-3">
          <a
            href={crumb.href}
            class={`inline-flex text-sm font-medium ${i == visibleBreadcrumbs.length - 1 ? "text-black hover:text-blue-800" : "text-[#71717A]"}`}
          >
            <span class={`ms-1 text-sm font-medium md:ms-2`}>
              {crumb.title}
            </span>
          </a>
          {i < visibleBreadcrumbs.length - 1 && <BreadCrumbArrow />}
        </li>
      ))
    }
  </ol>
</nav>
