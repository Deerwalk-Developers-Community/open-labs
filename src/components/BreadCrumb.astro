---
import BreadCrumbArrow from "./BreadCrumbArrow.astro";

const { pathname } = Astro.url;
const basePath = import.meta.env.BASE_URL || "/";

function createUrl(path:any) {
  const cleanPath = path.startsWith('/') ? path.substring(1) : path;
  const baseWithoutTrailing = basePath.endsWith('/') 
    ? basePath.slice(0, -1) 
    : basePath;
  return `${baseWithoutTrailing}/${cleanPath}`;
}

const isUniversitiesHome = pathname.match(/\/open-labs\/universities\/?$/);
const isCollegePage = pathname.match(/\/open-labs\/universities\/[^\/]+\/?$/);
const isCoursesPage = pathname.match(/\/open-labs\/courses\/[^\/]+\/?$/);
const isSubjectsPage = pathname.match(/\/open-labs\/subjects\/[^\/]+\/?$/);

const breadcrumbs = [];

breadcrumbs.push({
  title: "University",
  href: createUrl("open-labs/universities"),
  active: isUniversitiesHome
});

if (isCollegePage || isCoursesPage || isSubjectsPage) {
  breadcrumbs.push({
    title: "College",
    href: isCollegePage ? pathname : "#",
    active: isCollegePage
  });
}

if (isCoursesPage || isSubjectsPage) {
  breadcrumbs.push({
    title: "Courses",
    href: isCoursesPage ? pathname : "#",
    active: isCoursesPage
  });
}

if (isSubjectsPage) {
  breadcrumbs.push({
    title: "Subjects",
    href: pathname,
    active: true
  });
}
---

<nav class="flex">
  <ol
    class="inline-flex items-center space-x-1 md:space-x-2 rtl:space-x-reverse"
  >
    {
      breadcrumbs.map((crumb, i) => (
        <li class="inline-flex items-center gap-3">
          <a
            href={crumb.href}
            class={`inline-flex text-sm font-medium ${crumb.active ? "text-black hover:text-blue-800" : "text-[#71717A]"}`}
          >
            <span class={`ms-1 text-sm font-medium md:ms-2`}>
              {crumb.title}
            </span>
          </a>
          {i < breadcrumbs.length - 1 && <BreadCrumbArrow />}
        </li>
      ))
    }
  </ol>
</nav>